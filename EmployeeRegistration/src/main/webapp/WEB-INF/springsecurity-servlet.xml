<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.2.xsd">

		 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
     	 	<property name="driverClassName" value="org.postgresql.Driver"></property>
      	  	<property name="url" value="jdbc:postgresql://localhost:5432/postgres?currentSchema=test"/>
        	<property name="username" value="postgres"/>
        	<property name="password" value="admin"/>
       	 </bean>

	<!-- <bean id="dbUtil" class="com.studytrails.tutorials.springsecurityusingdb.DbUtil"
		init-method="initialize">
		<property name="dataSource" ref="dataSource" />
	</bean> -->

	<security:http auto-config="true">
		<security:intercept-url pattern="/**" access="ROLE_ADMIN" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from user_authentication where username=?"
				authorities-by-username-query="select u1.username, u2.role from user_authentication u1, user_authorization u2 where u1.user_id = u2.user_id and u1.username =?" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>